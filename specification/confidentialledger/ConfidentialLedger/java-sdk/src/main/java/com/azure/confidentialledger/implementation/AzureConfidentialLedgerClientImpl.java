// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.confidentialledger.implementation;

import com.azure.confidentialledger.AzureConfidentialLedgerServiceVersion;
import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.policy.CookiePolicy;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.util.serializer.JacksonAdapter;
import com.azure.core.util.serializer.SerializerAdapter;

/** Initializes a new instance of the AzureConfidentialLedgerClient type. */
public final class AzureConfidentialLedgerClientImpl {
    /** The Confidential Ledger URL, for example https://contoso.confidentialledger.azure.com. */
    private final String endpoint;

    /**
     * Gets The Confidential Ledger URL, for example https://contoso.confidentialledger.azure.com.
     *
     * @return the endpoint value.
     */
    public String getEndpoint() {
        return this.endpoint;
    }

    /** Service version. */
    private final AzureConfidentialLedgerServiceVersion serviceVersion;

    /**
     * Gets Service version.
     *
     * @return the serviceVersion value.
     */
    public AzureConfidentialLedgerServiceVersion getServiceVersion() {
        return this.serviceVersion;
    }

    /** The HTTP pipeline to send requests through. */
    private final HttpPipeline httpPipeline;

    /**
     * Gets The HTTP pipeline to send requests through.
     *
     * @return the httpPipeline value.
     */
    public HttpPipeline getHttpPipeline() {
        return this.httpPipeline;
    }

    /** The serializer to serialize an object into a string. */
    private final SerializerAdapter serializerAdapter;

    /**
     * Gets The serializer to serialize an object into a string.
     *
     * @return the serializerAdapter value.
     */
    public SerializerAdapter getSerializerAdapter() {
        return this.serializerAdapter;
    }

    /** The ConfidentialLedgersImpl object to access its operations. */
    private final ConfidentialLedgersImpl confidentialLedgers;

    /**
     * Gets the ConfidentialLedgersImpl object to access its operations.
     *
     * @return the ConfidentialLedgersImpl object.
     */
    public ConfidentialLedgersImpl getConfidentialLedgers() {
        return this.confidentialLedgers;
    }

    /** The LedgerEntriesImpl object to access its operations. */
    private final LedgerEntriesImpl ledgerEntries;

    /**
     * Gets the LedgerEntriesImpl object to access its operations.
     *
     * @return the LedgerEntriesImpl object.
     */
    public LedgerEntriesImpl getLedgerEntries() {
        return this.ledgerEntries;
    }

    /** The UsersImpl object to access its operations. */
    private final UsersImpl users;

    /**
     * Gets the UsersImpl object to access its operations.
     *
     * @return the UsersImpl object.
     */
    public UsersImpl getUsers() {
        return this.users;
    }

    /**
     * Initializes an instance of AzureConfidentialLedgerClient client.
     *
     * @param endpoint The Confidential Ledger URL, for example https://contoso.confidentialledger.azure.com.
     * @param serviceVersion Service version.
     */
    public AzureConfidentialLedgerClientImpl(String endpoint, AzureConfidentialLedgerServiceVersion serviceVersion) {
        this(
                new HttpPipelineBuilder()
                        .policies(new UserAgentPolicy(), new RetryPolicy(), new CookiePolicy())
                        .build(),
                JacksonAdapter.createDefaultSerializerAdapter(),
                endpoint,
                serviceVersion);
    }

    /**
     * Initializes an instance of AzureConfidentialLedgerClient client.
     *
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param endpoint The Confidential Ledger URL, for example https://contoso.confidentialledger.azure.com.
     * @param serviceVersion Service version.
     */
    public AzureConfidentialLedgerClientImpl(
            HttpPipeline httpPipeline, String endpoint, AzureConfidentialLedgerServiceVersion serviceVersion) {
        this(httpPipeline, JacksonAdapter.createDefaultSerializerAdapter(), endpoint, serviceVersion);
    }

    /**
     * Initializes an instance of AzureConfidentialLedgerClient client.
     *
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param serializerAdapter The serializer to serialize an object into a string.
     * @param endpoint The Confidential Ledger URL, for example https://contoso.confidentialledger.azure.com.
     * @param serviceVersion Service version.
     */
    public AzureConfidentialLedgerClientImpl(
            HttpPipeline httpPipeline,
            SerializerAdapter serializerAdapter,
            String endpoint,
            AzureConfidentialLedgerServiceVersion serviceVersion) {
        this.httpPipeline = httpPipeline;
        this.serializerAdapter = serializerAdapter;
        this.endpoint = endpoint;
        this.serviceVersion = serviceVersion;
        this.confidentialLedgers = new ConfidentialLedgersImpl(this);
        this.ledgerEntries = new LedgerEntriesImpl(this);
        this.users = new UsersImpl(this);
    }
}
